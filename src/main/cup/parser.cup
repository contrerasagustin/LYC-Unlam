package lyc.compiler;

import java_cup.runtime.*;

class Parser;


// Terminals
terminal IF;
terminal ELSE;
terminal FOR;
terminal BEGIN;
terminal END;
terminal EQUAL;
terminal ASSIG;
terminal PLUS;
terminal SUB;
terminal MULT;
terminal DIV;
terminal HIGHER;
terminal LOWER;
terminal HIGHER_EQUAL;
terminal LOWER_EQUAL;
terminal AND;
terminal OR;
terminal DISTINCT;
terminal TRUE_BOOL;
terminal FALSE_BOOL;
terminal NOT;
terminal INCREMENT;
terminal DECREMENT;
terminal OPEN_BRACKET;
terminal CLOSE_BRACKET;
terminal INTEGER_CONSTANT;
terminal IDENTIFIER;

// Non Terminals
non terminal sentence;
non terminal assignment;
non terminal expression;
non terminal term;
non terminal factor;
non terminal _sentence;
non terminal conditional;
non terminal condition;
non terminal operator;

// Start Symbol Definition
start with sentence;

sentence ::= _sentence {:System.out.println("End"); :};

_sentence ::= assignment {: System.out.println("No end"); :};
assignment ::= IDENTIFIER ASSIG expression {: System.out.println("Assignment"); :};
expression ::= expression PLUS term {: System.out.println("+"); :};
expression ::= expression SUB term {: System.out.println("-"); :};
expression ::= term {: System.out.println("Expression = Term"); :};
term ::= term MULT factor {: System.out.println("*"); :};
term ::= term DIV factor {: System.out.println("/"); :};
term ::= factor {: System.out.println("Term = factor"); :};
factor ::= IDENTIFIER:id  {: System.out.println("Id: " + id); :};
factor ::= INTEGER_CONSTANT:constant {: System.out.println("Constant: " + constant ); :};
factor ::= OPEN_BRACKET expression CLOSE_BRACKET {: System.out.println("Factor = (Expression)"); :};

_sentence ::= IF conditional {: System.out.println("if"); :};
conditional ::= OPEN_BRACKET condition CLOSE_BRACKET {: System.out.println("conditional"); :};
condition ::= factor operator factor {: System.out.println("conditio"); :};
operator ::= EQUAL {: System.out.println("equal"); :};
operator ::= HIGHER {: System.out.println("equal"); :};



